generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String           @id @default(cuid())
  name           String?
  email          String?          @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  Game           Game[]
  WishlistedGame WishlistedGame[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Game {
  id              String        @id @default(cuid())
  title           String
  platform        GamePlatform?
  status          GameStatus    @default(BACKLOG)
  rating          Int?
  review          String?
  userId          String
  user            User          @relation(fields: [userId], references: [id])
  imageUrl        String
  howLongToBeatId String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
}

model WishlistedGame {
  id              String    @id @default(cuid())
  title           String
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  imageUrl        String
  howLongToBeatId String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
}

enum GameStatus {
  BACKLOG
  INPROGRESS
  COMPLETED
  ABANDONED
}

enum GamePlatform {
  PC
  XBOX
  NINTENDO
  PLAYSTATION
}
